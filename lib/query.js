// Generated by CoffeeScript 1.10.0
(function() {
  var YAML, _query, async, get, read, ref, set,
    slice = [].slice;

  ref = require("fairmont"), async = ref.async, read = ref.read;

  YAML = require("js-yaml");

  get = function(object, key) {
    var index, match, ref1;
    if ((match = key.match(/^([^\[]+)\[(\d+)\]$/)) != null) {
      ref1 = match.slice(1), key = ref1[0], index = ref1[1];
      return object[key][index];
    } else {
      return object[key];
    }
  };

  set = function(object, key, value) {
    var index, match, ref1;
    if ((match = key.match(/^([^\[]+)\[(\d+)\]$/)) != null) {
      ref1 = match.slice(1), key = ref1[0], index = ref1[1];
      return object[key][index] = value;
    } else {
      return object[key] = value;
    }
  };

  _query = async(function*(arg) {
    var current, i, j, key, keys, last, len, path, query, ref1, root, value;
    path = arg.path, query = arg.query, value = arg.value;
    root = current = YAML.safeLoad((yield read(path)));
    ref1 = query.split("."), keys = 2 <= ref1.length ? slice.call(ref1, 0, i = ref1.length - 1) : (i = 0, []), last = ref1[i++];
    for (j = 0, len = keys.length; j < len; j++) {
      key = keys[j];
      current = get(current, key);
    }
    if (value != null) {
      set(current, last, value);
      return YAML.safeDump(root);
    } else {
      return get(current, last);
    }
  });

  module.exports = _query;

}).call(this);
