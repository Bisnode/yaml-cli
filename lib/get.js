// Generated by CoffeeScript 1.10.0
(function() {
  var YAML, call, isArray, isDefined, isObject, path, read, ref, ref1, reference,
    slice = [].slice;

  ref = require("fairmont"), call = ref.call, read = ref.read, isDefined = ref.isDefined, isObject = ref.isObject, isArray = ref.isArray;

  YAML = require("js-yaml");

  ref1 = process.argv.slice(2), path = ref1[0], reference = ref1[1];

  if ((path != null) && (reference != null)) {
    call(function*() {
      var current, i, j, key, keys, last, len, ref2, result, root;
      root = current = YAML.safeLoad((yield read(path)));
      ref2 = reference.split("."), keys = 2 <= ref2.length ? slice.call(ref2, 0, i = ref2.length - 1) : (i = 0, []), last = ref2[i++];
      for (j = 0, len = keys.length; j < len; j++) {
        key = keys[j];
        current = current[key];
      }
      result = current[last];
      if (isDefined(result)) {
        if ((isObject(result)) || (isArray(result))) {
          result = YAML.safeDump(result);
        }
        return console.log(result);
      }
    });
  } else {
    console.error("yaml get: insufficient arguments");
    console.error("yaml get <path> <reference>");
    process.exit(-1);
  }

}).call(this);
